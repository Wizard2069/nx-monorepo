# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  node: circleci/node@4.7

commands:
  npm_install:
    description: 'Install & Cache Dependencies'
    steps:
      - run: npm install -f
      - save_cache:
          key: ht-company-{{ checksum "package-lock.json" }}
          paths:
            - ~/.cache
            - node_modules

  restore_npm_cache:
    description: 'Restore Cached Dependencies'
    steps:
      - restore_cache:
          keys:
            - htcompany-{{ checksum "package-lock.json" }}
            - htcompany- # used if checksum fails

  setup:
    description: 'Setup Executor'
    steps:
      - checkout
      - attach_workspace:
          at: ~/project

  sonar_scan:
    description: 'Detect bugs and vulnerabilities'
    parameters:
      sonar_token_variable_name:
        description: the name of the environment variable where the SonarCloud API token is stored
        default: SONAR_TOKEN
        type: env_var_name
      cache_version:
        description: increment this value if the cache is corrupted and you want to start with a clean cache
        default: 1
        type: integer
    steps:
      - run:
          name: Create cache directory if it doesn't exist
          command: mkdir -p /tmp/cache/scanner
      - restore_cache:
          keys:
            - v<<parameters.cache_version>>-sonarcloud-scanner-4.1.0.1829
      - run:
          name: SonarCloud
          command: |
            set -e
            VERSION=4.1.0.1829
            SONAR_TOKEN=$<<parameters.sonar_token_variable_name>>
            SCANNER_DIRECTORY=/tmp/cache/scanner
            export SONAR_USER_HOME=$SCANNER_DIRECTORY/.sonar
            OS="linux"
            echo $SONAR_USER_HOME
            if [[ ! -x "$SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS/bin/sonar-scanner" ]]; then
              curl -Ol https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$VERSION-$OS.zip
              unzip -qq -o sonar-scanner-cli-$VERSION-$OS.zip -d $SCANNER_DIRECTORY
            fi

            chmod +x $SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS/bin/sonar-scanner
            chmod +x $SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS/jre/bin/java
            $SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS/bin/sonar-scanner
          environment:
            SONARQUBE_SCANNER_PARAMS: '{"sonar.host.url":"https://sonarcloud.io", "sonar.projectKey":"Wizard2069_nx-monorepo", "sonar.organization":"wizard2069"}'
      - save_cache:
          key: v<<parameters.cache_version>>-sonarcloud-scanner-4.1.0.1829
          paths: /tmp/cache/scanner

jobs:
  initialise:
    executor:
      name: node/default
    steps:
      - checkout
      - restore_npm_cache
      - npm_install
      - persist_to_workspace:
          root: ~/project
          paths:
            - node_modules
            - dist

  test:
    executor:
      name: node/default
    steps:
      - setup
      - run:
          name: Build all affected projects
          command: npx nx affected:test --base=master --head=HEAD

  scan:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - sonar_scan

workflows:
  build-and-test:
    jobs:
      - initialise
      - test:
          requires:
            - initialise
      - scan:
          requires:
            - initialise
